Start()
//Verificar se vou iniciar do zero ou se vou continuar de um processo existente
if(DocumentoProgresso.Existe){
   situacaoAtual = VerificarSituacaoAtual();
   if(DocumentoProgresso == SituacaoAtual){
      ContinuarDeOndeParou();
   } else {
      switch(Escolha){
         case 1:
            DocumentoProgresso = SituaçãoAtual;
            ContinuarDeOndeParou();
         case 2: //alterar apenas o necessário
            DocumentoProgresso.Atualizar //Apagar o que for necessário
            ContinuarDeOndeParou();
         case 3: //Começar do Zero, caso tenha dado muito problema
            Restart(); //Limpar tudo e começar de novo
      }
   }
} else {
   IniciarDoZero();
}

Partes:
- Verificação da existencia de um Documento de Progresso (Caso tenha fazer a Validação dos Requerimentos comparando com ela)
- Validação dos Requerimentos
   - Caso algo der errado tentar corrigir
   - Caso não seja possivel dar Exception e Finalizar aplicação

Requerimentos Necessários
- Se tem os Pacotes Instalados Atualizados (MongoDB.Bson, MongoDB.Driver, SharpZipLib)
- Diagnostico dos Recursos disponiveis na máquina e se é possivel ter mais recursos (verificar a existencia de um documento que limite a utilização dos recursos disponiveis)
- Verificação de Conexão (MongoDB, Internet, Site Receita Federal)
- Verificação de Permições (para gravar no MongoDB)
- Pegar informações de todos os Arquivos
	- Quantidade de Arquivos
	- Tamanho de cada arquivo descompactado
- Se tem espaço no Disco o suficiente para finalizar o download de tudo descompactado
- Pegar informações de quantos arquivos que tem, quanto cada um pesa, etc
- Distribuição das Tarefas com recursos disponiveis
- Configurações da Aplicação com Base no Recursos Disponiveis (CPU, Memoria RAM)
